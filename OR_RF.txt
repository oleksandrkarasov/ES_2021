command line to run this model:
C:\VisTrails_SAHM\Central_R\R-3.2.0\bin\x64\Rterm.exe --vanilla -f C:\VisTrails_SAHM\vistrails\packages\sahm\pySAHM\Resources\R_Modules\FIT_RF_pluggable.r --args multicore=TRUE om=2 cur_processing_mode=single models sequentially (n - 1 cores each) c=D:\oleksandr\model\OutdoorRecreation\rf_1\CovariateCorrelationOutputMDS_initial.csv o=D:\oleksandr\model\OutdoorRecreation\rf_1 mpt=TRUE seed=1234 mes=TRUE rc=responseBinary mbt=TRUE
outDir= D:\oleksandr\model\OutdoorRecreation\rf_1

Session continued


R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ###############################################################################
> ##
> ## Copyright (C) 2010-2012, USGS Fort Collins Science Center. 
> ## All rights reserved.
> ## Contact: talbertc@usgs.gov
> ##
> ## This file is part of the Software for Assisted Habitat Modeling package
> ## for VisTrails.
> ##
> ## "Redistribution and use in source and binary forms, with or without 
> ## modification, are permitted provided that the following conditions are met:
> ##
> ##  - Redistributions of source code must retain the above copyright notice, 
> ##    this list of conditions and the following disclaimer.
> ##  - Redistributions in binary form must reproduce the above copyright 
> ##    notice, this list of conditions and the following disclaimer in the 
> ##    documentation and/or other materials provided with the distribution.
> ##  - Neither the name of the University of Utah nor the names of its 
> ##    contributors may be used to endorse or promote products derived from 
> ##    this software without specific prior written permission.
> ##
> ## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
> ## AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
> ## THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
> ## PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
> ## CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
> ## EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
> ## PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
> ## OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
> ## WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
> ## OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
> ## ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
> ##
> ## Although this program has been used by the U.S. Geological Survey (USGS), 
> ## no warranty, expressed or implied, is made by the USGS or the 
> ## U.S. Government as to the accuracy and functioning of the program and 
> ## related program material nor shall the fact of distribution constitute 
> ## any such warranty, and no responsibility is assumed by the USGS 
> ## in connection therewith.
> ##
> ## Any use of trade, firm, or product names is for descriptive purposes only 
> ## and does not imply endorsement by the U.S. Government.
> ###############################################################################
> 
> 
>  # Interpret command line argurments #
> # Make Function Call #
> #Set defaults for optional commands
> make.p.tif=T
> make.binary.tif=T
> responseCurveForm="pdf"
> n.trees=1000
> mtry=NULL
> samp.replace=FALSE
> sampsize=NULL
> nodesize=NULL
> maxnodes=NULL
> importance=FALSE
> localImp=FALSE
> nPerm=1
> proximity=NULL
> oob.prox=proximity
> norm.votes=TRUE
> do.trace=FALSE
> keep.forest=NULL
> keep.inbag=FALSE
> make.r.curves=T
> seed=NULL
> opt.methods=2
> seed=NULL
> MESS=FALSE
> xtest=NULL
> ytest=NULL
> multCore=TRUE
> 
> Args <- commandArgs(trailingOnly=FALSE)
> 
>     for (i in 1:length(Args)){
+      if(Args[i]=="-f") ScriptPath<-Args[i+1]
+      argSplit <- strsplit(Args[i], "=")
+      if(argSplit[[1]][1]=="--file") ScriptPath <- argSplit[[1]][2]
+      }
> 
>     for (arg in Args) {
+     	argSplit <- strsplit(arg, "=")
+     	argSplit[[1]][1]
+     	argSplit[[1]][2]
+     	if(argSplit[[1]][1]=="c") csv <- argSplit[[1]][2]
+     	if(argSplit[[1]][1]=="o") output <- argSplit[[1]][2]
+     	if(argSplit[[1]][1]=="rc") responseCol <- argSplit[[1]][2]
+     	if(argSplit[[1]][1]=="mpt")  make.p.tif <- as.logical(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="mbt")  make.binary.tif <- as.logical(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="ntree")  n.trees <- as.numeric(argSplit[[1]][2])
+       if(argSplit[[1]][1]=="mtry")  mtry <- as.numeric(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="sampR")  samp.replace <- as.logical(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="sampS")  sampsize <- as.numeric(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="nodeS")  nodesize <- as.numeric(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="maxN")  maxnodes <- as.numeric(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="impt")  importance <- as.logical(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="locImp")  localImp <- as.logical(argSplit[[1]][2])
+  		  if(argSplit[[1]][1]=="nPerm")  nPerm <- as.numeric(argSplit[[1]][2])
+  		  if(argSplit[[1]][1]=="prox")  proximity <- as.logical(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="oopp")  oop.prox <- as.logical(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="NVot")  norm.votes <- as.logical(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="Trce")  do.trace <- as.logical(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="kf")  keep.forest <-  as.logical(argSplit[[1]][2])
+  			if(argSplit[[1]][1]=="Kbag")  keep.inbag <-  as.logical(argSplit[[1]][2])
+  		  if(argSplit[[1]][1]=="curves")  make.r.curves <-  as.logical(argSplit[[1]][2])
+  		  if(argSplit[[1]][1]=="om")  opt.methods <- as.numeric(argSplit[[1]][2])
+       if(argSplit[[1]][1]=="mes")  MESS <- as.logical(argSplit[[1]][2])
+       if(argSplit[[1]][1]=="seed")  seed <- as.numeric(argSplit[[1]][2])
+       if(argSplit[[1]][1]=="multicore")  multCore <- as.logical(argSplit[[1]][2])
+ 
+  		  
+     }
> 
> ScriptPath<-dirname(ScriptPath)
> source(file.path(ScriptPath,"RF.helper.fcts.r"))
> source(file.path(ScriptPath,"LoadRequiredCode.r"))
> 
> FitModels(ma.name=csv,tif.dir=NULL,output.dir=output,response.col=responseCol,make.p.tif=make.p.tif,make.binary.tif=make.binary.tif,
+       debug.mode=F,xtest=xtest,ytest=ytest,n.trees=n.trees,mtry=mtry,samp.replace=samp.replace, sampsize=sampsize,
+       nodesize=nodesize,maxnodes=maxnodes,importance=importance,
+       localImp=localImp,nPerm=nPerm,proximity=proximity,oob.prox=oob.prox,norm.votes=norm.votes,do.trace=do.trace,keep.forest=keep.forest,
+       keep.inbag=keep.inbag,make.r.curves=make.r.curves,
+       seed=seed,script.name="rf",opt.methods=opt.methods,MESS=MESS,ScriptPath=ScriptPath,multCore=multCore)

tuning mtry parameter
mtry = 3  OOB error = 8% 
Searching left ...
mtry = 2 	OOB error = 8.04% 
-0.005518764 0.05 
Searching right ...
mtry = 6 	OOB error = 8.16% 
-0.01986755 0.05 

now fitting full random forest model using mtry= 
1  
tuning mtry parameter
mtry = 3  OOB error = 8.15% 
Searching left ...
mtry = 2 	OOB error = 8.19% 
-0.004813478 0.05 
Searching right ...
mtry = 6 	OOB error = 8.52% 
-0.04452467 0.05 

now fitting full random forest model using mtry= 
2  
tuning mtry parameter
mtry = 3  OOB error = 8.23% 
Searching left ...
mtry = 2 	OOB error = 8.14% 
0.01072706 0.05 
Searching right ...
mtry = 6 	OOB error = 8.34% 
-0.01311085 0.05 

now fitting full random forest model using mtry= 
3  
tuning mtry parameter
mtry = 3  OOB error = 8.07% 
Searching left ...
mtry = 2 	OOB error = 8.15% 
-0.009720535 0.05 
Searching right ...
mtry = 6 	OOB error = 8.23% 
-0.01944107 0.05 

now fitting full random forest model using mtry= 
4  
tuning mtry parameter
mtry = 3  OOB error = 8.09% 
Searching left ...
mtry = 2 	OOB error = 8.1% 
-0.001212121 0.05 
Searching right ...
mtry = 6 	OOB error = 8.24% 
-0.01818182 0.05 

now fitting full random forest model using mtry= 
5  
tuning mtry parameter
mtry = 3  OOB error = 8% 
Searching left ...
mtry = 2 	OOB error = 8.05% 
-0.006127451 0.05 
Searching right ...
mtry = 6 	OOB error = 8.27% 
-0.03308824 0.05 

now fitting full random forest model using mtry= 
6  
tuning mtry parameter
mtry = 3  OOB error = 8.2% 
Searching left ...
mtry = 2 	OOB error = 8.07% 
0.01555024 0.05 
Searching right ...
mtry = 6 	OOB error = 8.23% 
-0.003588517 0.05 

now fitting full random forest model using mtry= 
7  
tuning mtry parameter
mtry = 3  OOB error = 7.97% 
Searching left ...
mtry = 2 	OOB error = 8.2% 
-0.02829028 0.05 
Searching right ...
mtry = 6 	OOB error = 8.14% 
-0.02091021 0.05 

now fitting full random forest model using mtry= 
8  
tuning mtry parameter
mtry = 3  OOB error = 8.05% 
Searching left ...
mtry = 2 	OOB error = 7.92% 
0.01583435 0.05 
Searching right ...
mtry = 6 	OOB error = 8.41% 
-0.04384896 0.05 

now fitting full random forest model using mtry= 
9  
tuning mtry parameter
mtry = 3  OOB error = 8.06% 
Searching left ...
mtry = 2 	OOB error = 8.12% 
-0.00729927 0.05 
Searching right ...
mtry = 6 	OOB error = 8.48% 
-0.05109489 0.05 

now fitting full random forest model using mtry= 
10  
tuning mtry parameter
mtry = 3  OOB error = 8.4% 
Searching left ...
mtry = 2 	OOB error = 8.2% 
0.02450408 0.05 
Searching right ...
mtry = 6 	OOB error = 8.53% 
-0.01516919 0.05 

now fitting full random forest model using mtry= 
 
40%
Progress:70%

finished with final model summarization, t= 55.53 sec
Progress:80%

producing prediction maps... 
 

finished with prediction maps, t= 1638.47 sec
Progress:100%
> 
>  
> 

tiles_dname D:\oleksandr\model\OutdoorRecreation\rf_1\BinTiff
outFname D:\oleksandr\model\OutdoorRecreation\rf_1\rf_bin_map.tif
0...10...20...30...40...50...60...70...80...90...100 - done.
tiles_dname D:\oleksandr\model\OutdoorRecreation\rf_1\ProbTiff
outFname D:\oleksandr\model\OutdoorRecreation\rf_1\rf_prob_map.tif
0...10...20...30...40...50...60...70...80...90...100 - done.
tiles_dname D:\oleksandr\model\OutdoorRecreation\rf_1\ResidTiff
outFname D:\oleksandr\model\OutdoorRecreation\rf_1\rf_resid_map.tif
0...10...20...30...40...50...60...70...80...90...100 - done.
tiles_dname D:\oleksandr\model\OutdoorRecreation\rf_1\MESSTiff
outFname D:\oleksandr\model\OutdoorRecreation\rf_1\rf_mess_map.tif
0...10...20...30...40...50...60...70...80...90...100 - done.
tiles_dname D:\oleksandr\model\OutdoorRecreation\rf_1\ModTiff
outFname D:\oleksandr\model\OutdoorRecreation\rf_1\rf_mod_map.tif
0...10...20...30...40...50...60...70...80...90...100 - done.
Finished successfully!
